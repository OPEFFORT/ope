#!/bin/bash
#set -x
# Copyright (C) 2022 by Jonathan Appavoo, Boston University
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# --------- Script begins here -------------

set -e

# Informations
git_username=$(git config --global user.name)
git_email=$(git config --global user.email)

# Script Configuration
HEADER="[OPE] "
# Color Configuration
Color_Off='\033[0m'       # Text Reset
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White
Grey='\033[0;37m'         # Grey


function mk
#DESCRIPTION: make a new book
{
    name=$1

    if [[ -z $name || $name = '-h' ]]; then
        echo "Usage:  ${0##*/} mk <bookName>"
        echo "   makes a template book of the name specified"
        echo "   eg. ope mk MyBook"
        echo "   will create a new local repository seeded from the ope "
        echo "   template.  See the ope gettings started doc for more info."
        return -1
    fi

    if [[ -d $name ]]; then
        printf "$HEADER${Red}ERROR: Book $name already exists${Color_Off}\n"
        return -1
    fi

    printf "$HEADER${Green}Seeding from OPE content template${Color_Off}\n"

    mkdir -p $name
    cd $name
    git init | while read line; do printf "     ${Grey}$line${Color_Off}\r"; done
    git remote add origin git@github.com:OPEFFORT/ope.git | while read line; do printf "${Grey}$line${Color_Off}\r"; done
    git pull origin coursecontenttemplate 2>&1 | while read line; do printf "${Grey}$line${Color_Off}\r"; done
    
    printf "                                                                                      \r"
    printf "$HEADER${Green}OPE book has successfully created ${Color_Off}\n"

    
}

function update
#DESCRIPTION: update the ope framework
{
    arg=$1
    if [[ $arg = '-h' ]]; then
	echo "Usage:  ${0##*/} update"
	return -1
    fi
    
}

function build
#DESCRIPTION: build the book
{
    arg=$1
    if [[ -z $arg || $arg = '-h' ]]; then
	echo "Usage: build"
	return -1
    fi    
}

function pub
#DESCRIPTION: publish the book
{
    arg=$1
    if [[ -z $arg || $arg = '-h' ]]; then
    echo "Usage: pub"
    return -1
    fi    
}

print_func_page()
{
    func_names=($(grep '^function' $0 | awk '{print $2}'))
    grep '^#DESCRIPTION' $0 | awk -F: '{print $2}' | while read line ; do printf "  ${Blue}${func_names[$i]}${Color_Off}, $line\n"; i=$((i+1)); done | column -t -s,
}

Usage()
{
    echo 
    echo "Usage:  ${0##*/} FUNCTION {ARGS} " >&2
    echo
    echo "A command-line tool for building open source infrastructures using ope framework"
    echo 
    echo "Functions: "
    print_func_page
    echo
    echo "for each func use '-h' to print its Usage: eg. ${0##*/} dump -h"
    echo "will print the Usage for the dump command"
}




process_args()
{
  if [[ $# == 0 || $1 = '-h' ]]
  then
    Usage
    exit -1
  fi

  dofunc=$1
}

process_args "$@"
shift

$dofunc "$@"

exit $?
